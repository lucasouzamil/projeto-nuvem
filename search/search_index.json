{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Vis\u00e3o geral","text":""},{"location":"#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Este projeto \u00e9 uma API RESTful desenvolvida para realizar o registro e autentica\u00e7\u00e3o de usu\u00e1rios, al\u00e9m de fornecer a cota\u00e7\u00e3o atual do d\u00f3lar em reais. A API foi constru\u00edda com FastAPI e utiliza JWT para autentica\u00e7\u00e3o, garantindo seguran\u00e7a no acesso ao endpoint de consulta. A consulta de cota\u00e7\u00e3o do d\u00f3lar \u00e9 realizada via web scraping da p\u00e1gina D\u00f3lar Hoje, enquanto o gerenciamento de usu\u00e1rios e suas informa\u00e7\u00f5es \u00e9 feito utilizando o banco de dados MySQL, executado em um container Docker para facilitar a portabilidade e consist\u00eancia do ambiente.</p>"},{"location":"#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Registro de novos usu\u00e1rios com cria\u00e7\u00e3o de token JWT</li> <li>Autentica\u00e7\u00e3o de usu\u00e1rios com retorno de token JWT</li> <li>Consulta da cota\u00e7\u00e3o do d\u00f3lar, acess\u00edvel apenas para usu\u00e1rios autenticados</li> </ul> <p>Veja o v\u00eddeo de demonstra\u00e7\u00e3o da API abaixo:</p>"},{"location":"#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Docker instalado na m\u00e1quina.</li> </ul>"},{"location":"#passos-para-execucao","title":"Passos para execu\u00e7\u00e3o","text":""},{"location":"#1-crie-um-arquivo-composeyaml","title":"1. Crie um arquivo  <code>compose.yaml</code>","text":"<p>No diret\u00f3rio de sua prefer\u00eancia, crie um arquivo chamado <code>compose.yaml</code> com o seguinte conte\u00fado (voc\u00ea tamb\u00e9m pode baixa-lo no reposit\u00f3rio do projeto):</p> <pre><code>services:\n\n  db:\n    image: mysql:9.1.0\n    environment:\n      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD:-projeto}\n      MYSQL_DATABASE: ${DATABASE_NAME:-projeto}\n      MYSQL_USER: ${USER:-projeto}\n      MYSQL_PASSWORD: ${PASSWORD:-projeto}\n    ports:\n      - \"3306:3306\"\n\n  api:\n    image: lucasouzamil/projeto-api-consulta-dolar:v1.0\n    environment:\n      # Informa\u00e7\u00f5es da conectividade com o DB\n      - USER=${USER:-projeto}\n      - PASSWORD=${PASSWORD:-projeto}\n      - SERVER=db\n      - PORT=3306\n      - DATABASE_NAME=${DATABASE_NAME:-projeto}\n      # Informa\u00e7\u00f5es da JWT\n      - SECRET_KEY=${SECRET_KEY:-key_super_secreta}\n      - ALGORITHM=${ALGORITHM:-HS256}\n      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - db\n    restart: always\n</code></pre>"},{"location":"#2-configurar-variaveis-personalizadas-opcional","title":"2. Configurar vari\u00e1veis personalizadas (opcional)","text":"<p>Para usar vari\u00e1veis personalizadas, crie um arquivo <code>.env</code> no mesmo diret\u00f3rio do <code>compose.yaml</code> (voc\u00ea tamb\u00e9m pode baixar o arquivo <code>.env.example</code> no reposit\u00f3rio do projeto e renomea-lo). Adicione nele as vari\u00e1veis com os valores desejados, por exemplo:</p> <pre><code>#Informa\u00e7\u00f5es da conectividade com o DataBase\nROOT_PASSWORD=SenhaSuperSecretaRoot\n\nUSER=NomeDeUsuarioDoDataBase\nPASSWORD=SenhaSuperSecretaUsuario\nDATABASE_NAME=NomeDoDatabase\n\n# Informa\u00e7\u00f5es da JWT\nSECRET_KEY=KeySuperSecretaDeCryptografia\nACCESS_TOKEN_EXPIRE_MINUTES=30 #minutos\n</code></pre> <p>Isso permite que voc\u00ea altere as configura\u00e7\u00f5es sem modificar o compose.yaml.</p>"},{"location":"#3-iniciar-os-servicos-com-o-docker-compose","title":"3. Iniciar os servi\u00e7os com o Docker Compose","text":"<p>No terminal, navegue at\u00e9 o diret\u00f3rio onde est\u00e1 o compose.yaml e execute o comando:</p> <pre><code>docker compose up -d\n</code></pre>"},{"location":"#4-acessar-a-aplicacao","title":"4. Acessar a aplica\u00e7\u00e3o","text":"<p>Com os servi\u00e7os ativos, acesse a aplica\u00e7\u00e3o em <code>http://localhost:8000</code>. A documenta\u00e7\u00e3o interativa da API estar\u00e1 dispon\u00edvel em <code>http://localhost:8000/docs</code>.</p> <p>OBS: Para requisi\u00e7\u00f5es que utilizam autentica\u00e7\u00e3o JWT, utilize outras formas de consulta, como o Postman.</p>"},{"location":"#documentacao-da-api","title":"Documenta\u00e7\u00e3o da API","text":""},{"location":"#1-post-registrar","title":"1. POST /registrar","text":"<p>Registra um novo usu\u00e1rio e retorna um token JWT.</p> <ul> <li> <p>Rquest: JSON</p> <pre><code>{\n    \"nome\": \"Disciplina Cloud\",\n    \"email\": \"cloud@insper.edu.br\",\n    \"senha\": \"cloud0\"\n}\n</code></pre> </li> <li> <p>Response: JSON</p> <pre><code>{\n    \"jwt\": \"&lt;JWT gerado&gt;\"\n}\n</code></pre> </li> </ul>"},{"location":"#2-post-login","title":"2. POST /login","text":"<p>Autentica o usu\u00e1rio e retorna um token JWT.</p> <ul> <li> <p>Request: JSON     <pre><code>{\n    \"email\": \"cloud@insper.edu.br\",\n    \"senha\": \"cloud0\"\n}\n</code></pre></p> </li> <li> <p>Response: JSON     <pre><code>{\n    \"jwt\": \"&lt;JWT gerado&gt;\"\n}\n</code></pre></p> </li> </ul>"},{"location":"#3-get-consultar","title":"3. GET /consultar","text":"<p>Retorna a cota\u00e7\u00e3o atual do d\u00f3lar em reais. Requer autentica\u00e7\u00e3o via JWT.</p> <ul> <li> <p>Header:</p> <pre><code>Authorization: Bearer &lt;JWT&gt;\n</code></pre> </li> <li> <p>Response: JSON     <pre><code>{\n    \"D\u00f3lar agora (R$)\": \"&lt;Cota\u00e7\u00e3o atual&gt;\"\n}\n</code></pre></p> </li> </ul>"},{"location":"#demonstracao","title":"Demonstra\u00e7\u00e3o","text":""},{"location":"#1-post-registrar_1","title":"1. POST /registrar","text":""},{"location":"#2-post-login_1","title":"2. POST /login","text":""},{"location":"#3-get-consultar_1","title":"3. GET /consultar","text":""},{"location":"#docker-hub","title":"Docker Hub","text":"<p>A imagem deste projeto est\u00e1 dispon\u00edvel no Docker Hub: Imagem Docker do Projeto</p>"}]}